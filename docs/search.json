[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Yoav Noiman",
    "section": "",
    "text": "A little bit about me and my life."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Yoav Noiman",
    "section": "Education",
    "text": "Education\nUniversity of California State University, Fullerton | Location | Fall 2021 - Spring 2025"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Yoav Noiman",
    "section": "Experience",
    "text": "Experience\nWorkplace | Job title | April 20XX - present"
  },
  {
    "objectID": "Final_Project_Text_And_Code.html",
    "href": "Final_Project_Text_And_Code.html",
    "title": "NFL Attendance",
    "section": "",
    "text": "This section describes what you are investigating in your project and why you are investigating it. You should provide enough contextual background and information that someone with a limited background can understand the broad outlines of the topic being investigated.\nI am investigating attendance at NFL games because it is interesting to delve into the many factors that play into why a person would go to a stadium rather than simply watch from home. The time of day, date, loyalty to a team, cost, and rivalries may all play a role. There are also other monetary reasons one should consider investigating future attendance. For instance, given a predicted increase, which isn’t possible due to stadium limitations, renovating stadiums for additional seats may become a priority. In addition, there are dynamic reasons, such as ticket prices and the number of staff, which can change depending on predicted attendance.\nThe background to understand NFL game attendance is the locations of stadiums and the popularity of teams. While how the game is played is interesting, it isn’t vital to the analysis as long as we know that higher scores are better. There is, however, a simple rating system where 0 is an average team, with above zero being better and below being worse, used to measure the quality of the teams’ offense, defense, and opponents. There is also a bye week for each team where they don’t play, and the data uses the outdated sixteen-game season with eight played at home and the other eight played away. Lastly, changes in team names and locations are important to consider."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "blog/first-post/index.html",
    "href": "blog/first-post/index.html",
    "title": "First Post",
    "section": "",
    "text": "Sed risus ultricies tristique nulla aliquet. Neque volutpat ac tincidunt vitae semper quis lectus nulla.\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Enim sed faucibus turpis in eu mi bibendum neque. Ac orci phasellus egestas tellus rutrum tellus pellentesque eu. Velit sed ullamcorper morbi tincidunt ornare massa. Sagittis id consectetur purus ut faucibus pulvinar elementum integer. Tincidunt nunc pulvinar sapien et ligula ullamcorper malesuada proin libero. Lobortis feugiat vivamus at augue eget arcu. Aliquam ut porttitor leo a diam sollicitudin tempor id eu. Mauris a diam maecenas sed enim ut sem viverra aliquet. Enim ut tellus elementum sagittis vitae et leo duis. Molestie at elementum eu facilisis sed odio morbi quis commodo. Sapien pellentesque habitant morbi tristique senectus. Quam vulputate dignissim suspendisse in est. Nulla pellentesque dignissim enim sit amet venenatis urna cursus eget.\nVelit aliquet sagittis id consectetur purus ut faucibus pulvinar elementum. Viverra mauris in aliquam sem fringilla ut morbi tincidunt augue. Tortor at auctor urna nunc id. Sit amet consectetur adipiscing elit duis tristique sollicitudin. Aliquet nibh praesent tristique magna sit amet purus. Tristique senectus et netus et malesuada fames ac turpis. Hac habitasse platea dictumst quisque. Auctor neque vitae tempus quam pellentesque nec nam aliquam. Ultrices tincidunt arcu non sodales neque sodales ut etiam. Iaculis at erat pellentesque adipiscing. Cras tincidunt lobortis feugiat vivamus. Nisi est sit amet facilisis magna etiam. Pharetra pharetra massa massa ultricies mi quis hendrerit. Vitae sapien pellentesque habitant morbi tristique senectus. Ornare aenean euismod elementum nisi quis eleifend quam adipiscing vitae."
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "Predicting House Prices with Machine Learning\n\n\n\nPython\n\n\nMachine Learning\n\n\nData Cleaning\n\n\n\nThis project involves using machine learning algorithms to predict house prices based on various features such as location, size, and amenities. It includes data cleaning, feature engineering, and model selection.\n\n\n\nJan 1, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustomer Segmentation Using Clustering Techniques\n\n\n\nR\n\n\nMachine Learning\n\n\nClustering\n\n\nStatistical Modelling\n\n\n\nThis project focuses on segmenting customers into different groups based on their purchasing behavior and demographics. It uses clustering algorithms like K-means and hierarchical clustering to identify distinct customer segments.\n\n\n\nApr 1, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizing Global CO2 Emissions\n\n\n\nR\n\n\nData Visualization\n\n\nEnvironmental Science\n\n\n\nThis project involves creating visualizations to show trends in global CO2 emissions over time. It includes data extraction from public databases, data cleaning, and using visualization libraries to create interactive charts and graphs.\n\n\n\nJul 1, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/third-post/index.html",
    "href": "blog/third-post/index.html",
    "title": "Third Blog Post",
    "section": "",
    "text": "The source for any page in your website could also be a Jupyter Notebook. This one is third-post/index.ipynb.\nHere’s an example I borrowed from the Seaborn docs:\n\nimport seaborn as sns\n\nsns.set_theme(style=\"whitegrid\")\n\n# Load the diamonds dataset\ndiamonds = sns.load_dataset(\"diamonds\")\n\n# Plot the distribution of clarity ratings, conditional on carat\nsns.displot(\n    data=diamonds,\n    x=\"carat\", hue=\"cut\",\n    kind=\"kde\", height=4, aspect=1.5,\n    multiple=\"fill\", clip=(0, None),\n    palette=\"ch:rot=-.25,hue=1,light=.75\",   \n)"
  },
  {
    "objectID": "blog/second-post/index.html",
    "href": "blog/second-post/index.html",
    "title": "Second Post",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis imperdiet massa tincidunt nunc pulvinar sapien et ligula. Amet cursus sit amet dictum sit amet. Eget duis at tellus at urna condimentum. Convallis aenean et tortor at risus viverra. Tincidunt ornare massa eget egestas purus viverra accumsan. Et malesuada fames ac turpis egestas. At imperdiet dui accumsan sit amet. Ut ornare lectus sit amet est placerat. Enim nulla aliquet porttitor lacus luctus accumsan tortor posuere. Duis ultricies lacus sed turpis tincidunt id aliquet risus. Mattis enim ut tellus elementum sagittis. Dui id ornare arcu odio ut. Natoque penatibus et magnis dis. Libero justo laoreet sit amet cursus sit. Sed faucibus turpis in eu. Tempus iaculis urna id volutpat lacus laoreet.\nPhasellus vestibulum lorem sed risus. Eget felis eget nunc lobortis mattis. Sit amet aliquam id diam maecenas ultricies. Egestas maecenas pharetra convallis posuere morbi. Etiam erat velit scelerisque in dictum non consectetur a erat. Cras fermentum odio eu feugiat pretium nibh ipsum consequat. Viverra accumsan in nisl nisi scelerisque. Et netus et malesuada fames ac. Amet tellus cras adipiscing enim eu turpis egestas pretium aenean. Eget lorem dolor sed viverra ipsum nunc aliquet. Ultrices dui sapien eget mi proin sed libero enim sed. Ultricies mi eget mauris pharetra et ultrices neque. Ipsum suspendisse ultrices gravida dictum. A arcu cursus vitae congue mauris rhoncus aenean vel. Gravida arcu ac tortor dignissim convallis. Nulla posuere sollicitudin aliquam ultrices."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#main-objective",
    "href": "Final_Project_Text_And_Code.html#main-objective",
    "title": "NFL Attendance",
    "section": "Main Objective",
    "text": "Main Objective\nThe main objective of this project is to predict what the attendance per game would have been in the 2020 season if there wasn’t a COVID-19 restriction."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#packages-used-in-this-analysis",
    "href": "Final_Project_Text_And_Code.html#packages-used-in-this-analysis",
    "title": "NFL Attendance",
    "section": "Packages Used In This Analysis",
    "text": "Packages Used In This Analysis\n\nlibrary(readr)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(kknn)\nlibrary(probably)\nlibrary(readxl)\nlibrary(janitor)\nlibrary(workflows)\nlibrary(workflowsets)\nlibrary(recipes)\nlibrary(rsample)\nlibrary(parsnip)\nlibrary(yardstick)\nlibrary(tune)\nlibrary(ggplot2)\nlibrary(tidymodels)\nlibrary(naniar)\n\n\n\n\n\n\n\n\nPackage\nUse\n\n\n\n\n[readr]\nread in csv\n\n\n\n…\nFINISH"
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#data-description",
    "href": "Final_Project_Text_And_Code.html#data-description",
    "title": "NFL Attendance",
    "section": "Data Description",
    "text": "Data Description\nI am using data on attendance, scores, and other metrics for football teams’ games from 2000 to 2019. It is from a Tidy Tuesday from 02/04/2020, which is a community which posts weekly projects. The data is collected from Pro Football Reference which I am also using, and it was most likely collected through nfl.com as there is a game book which states the attendance as the data matches it. It also states the stadiums which would be useful to scrape and the dates and times are also most likely collected from their. The game book states it is paid attendance which is probably collected based on how many tickets are used to enter the stadium.\nTidy Tuesday https://github.com/rfordatascience/tidytuesday/tree/main/data/2020/2020-02-04\nPro Football Reference https://www.pro-football-reference.com/\nNFL Website https://www.nfl.com/\n\nattendance &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-02-04/attendance.csv')\nstandings &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-02-04/standings.csv')\ngames &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-02-04/games.csv')\n\nstadiums &lt;- clean_names(read_excel(here::here(\"Final_Project_Data/Stadiums.xls\")))\n\nAttendance_2020 &lt;- clean_names(read_excel(here::here(\"Final_Project_Data/2020Attendance.xls\")))\n\n\nData Limitations\nThere are many limitations, such as there not being recorded stadiums, stadium capacity, and the size of the city. There may also be bias in the way that attendance is recorded to make the league seem to have a better performance or for headlines. The methodology that follows also may not be applicable to other sports as the number of games may be vital to whether people attend a game, whether due to fatigue from too many games or better opportunities; however, due to similarities, college football may be applicable. In addition, preseason and playoff data aren’t included; however, the methodology that follows may be applicable to them."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#data-wrangling-optional-section",
    "href": "Final_Project_Text_And_Code.html#data-wrangling-optional-section",
    "title": "Replace this with an interesting title",
    "section": "Data Wrangling (Optional Section)",
    "text": "Data Wrangling (Optional Section)\n\nAttendance_2020 &lt;- Attendance_2020 %&gt;%\n  mutate(across(starts_with(\"week_\"), as.numeric)) %&gt;%\n  pivot_longer(\n    cols = starts_with(\"week_\"),\n    names_prefix = \"week_\",\n    names_to = \"week\",\n    values_to = \"weekly_attendance\"\n  )\n\nWarning: There were 9 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `across(starts_with(\"week_\"), as.numeric)`.\nCaused by warning:\n! NAs introduced by coercion\nℹ Run `dplyr::last_dplyr_warnings()` to see the 8 remaining warnings.\n\nattendance$newteam &lt;- str_c(attendance$team, attendance$team_name, sep = \" \", collapse = NULL)\nstandings$newteam &lt;- str_c(standings$team, standings$team_name, sep = \" \", collapse = NULL)\ngames$week &lt;- as.numeric(games$week)\n\nWarning: NAs introduced by coercion\n\ngames &lt;- games %&gt;%\n  drop_na(week)\ndata &lt;- games %&gt;%\n  left_join(attendance, by = c(\"home_team\" = \"newteam\", \"year\", \"week\"))\ndata &lt;- data %&gt;%\n  left_join(standings, by = c(\"home_team\" = \"newteam\", \"year\", \"team\", \"team_name\"))\nstadiums &lt;- stadiums %&gt;%\n  separate_rows(primary_team_s, sep = \",\")\nstadiums &lt;- stadiums %&gt;%\n  drop_na(primary_team_s)\nstadiums &lt;- stadiums %&gt;%\n  rowwise() %&gt;%\n  mutate(year = list(from:to)) %&gt;%\n  unnest(year) %&gt;%\n  select(-from, -to)\nstadiums &lt;- stadiums %&gt;%\n  filter(year &gt;= 2000)\nstadiums &lt;- stadiums %&gt;%\n  filter(year &lt;= 2020)\nstadiums &lt;- stadiums %&gt;%\n  distinct(year, primary_team_s, .keep_all = TRUE)\ndata &lt;- data %&gt;%\n  left_join(stadiums, by = c(\"home_team\" = \"primary_team_s\", \"year\"))\n\n\ndata_train &lt;- data %&gt;%\n  filter(year != 2019)\ndata_test &lt;- data %&gt;%\n  filter(year == 2019)"
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#exploratory-data-analysis",
    "href": "Final_Project_Text_And_Code.html#exploratory-data-analysis",
    "title": "NFL Attendance",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\nattendance %&gt;%\n  miss_var_summary()\n\n# A tibble: 9 × 3\n  variable          n_miss pct_miss\n  &lt;chr&gt;              &lt;int&gt;    &lt;num&gt;\n1 weekly_attendance    638     5.88\n2 team                   0     0   \n3 team_name              0     0   \n4 year                   0     0   \n5 total                  0     0   \n6 home                   0     0   \n7 away                   0     0   \n8 week                   0     0   \n9 newteam                0     0   \n\ncount(attendance)/638\n\n   n\n1 17\n\n\nThis corresponds one-to-one to the fact that each team is given one week of the seventeen-week season as a bye week.\n\ndata_train %&gt;%\nsummarize(\nnumber = n(),\nweekly_attendance_mean = mean(weekly_attendance, na.rm = TRUE),\nweekly_attendance_sd = sd(weekly_attendance, na.rm = TRUE),\nweekly_attendance_min = min(weekly_attendance, na.rm = TRUE),\nweekly_attendance_q1 = quantile(weekly_attendance, 0.25, na.rm = TRUE),\nweekly_attendance_median = median(weekly_attendance, na.rm = TRUE),\nweekly_attendance_q3 = quantile(weekly_attendance, 0.75, na.rm = TRUE),\nweekly_attendance_max = max(weekly_attendance, na.rm = TRUE)\n)\n\n# A tibble: 1 × 8\n  number weekly_attendance_mean weekly_attendance_sd weekly_attendance_min\n   &lt;int&gt;                  &lt;dbl&gt;                &lt;dbl&gt;                 &lt;dbl&gt;\n1   4848                 67609.                8897.                 23127\n# ℹ 4 more variables: weekly_attendance_q1 &lt;dbl&gt;,\n#   weekly_attendance_median &lt;dbl&gt;, weekly_attendance_q3 &lt;dbl&gt;,\n#   weekly_attendance_max &lt;dbl&gt;\n\nggplot(data = data_train,\n       mapping = aes(x = weekly_attendance)\n) +\n  geom_histogram(center = 57500,\n                 binwidth = 5000)\n\n\n\n\n\n\n\nggplot(data = data_train,\nmapping = aes(y = weekly_attendance)\n) +\ngeom_boxplot()\n\n\n\n\n\n\n\n\nThrough the table, we can get the total number of values, mean, standard deviation, minimum, median, maximum, and the value at the \\(25\\%\\) and \\(75%\\) of attendance in training data. Through the exact values, we notice that attendance is centered between 63,000 and 73,000 people. In addition, all the values are plausible, as there are no recorded negative or exceedingly high values. The histogram shows no large breaks between different recorded attendances, but as the values get more extreme, there are fewer recorded games with such attendance. The boxplot shows a large number of outliers.\n\ndata_train %&gt;%\n group_by(home_team) %&gt;%\n  count()\n\n# A tibble: 34 × 2\n# Groups:   home_team [34]\n   home_team              n\n   &lt;chr&gt;              &lt;int&gt;\n 1 Arizona Cardinals    152\n 2 Atlanta Falcons      152\n 3 Baltimore Ravens     152\n 4 Buffalo Bills        152\n 5 Carolina Panthers    152\n 6 Chicago Bears        152\n 7 Cincinnati Bengals   152\n 8 Cleveland Browns     152\n 9 Dallas Cowboys       152\n10 Denver Broncos       152\n# ℹ 24 more rows\n\ndata_train %&gt;%\n  group_by(home_team) %&gt;%\n  summarize(\n    number = n(),\n    weekly_attendance_mean = mean(weekly_attendance, na.rm = TRUE),\n    weekly_attendance_sd = sd(weekly_attendance, na.rm = TRUE),\n    weekly_attendance_min = min(weekly_attendance, na.rm = TRUE),\n    weekly_attendance_q1 = quantile(weekly_attendance, 0.25, na.rm = TRUE),\n    weekly_attendance_median = median(weekly_attendance, na.rm = TRUE),\n    weekly_attendance_q3 = quantile(weekly_attendance, 0.75, na.rm = TRUE),\n    weekly_attendance_max = max(weekly_attendance, na.rm = TRUE)\n  )\n\n# A tibble: 34 × 9\n   home_team          number weekly_attendance_mean weekly_attendance_sd\n   &lt;chr&gt;               &lt;int&gt;                  &lt;dbl&gt;                &lt;dbl&gt;\n 1 Arizona Cardinals     152                 56317.               12721.\n 2 Atlanta Falcons       152                 67947.                6497.\n 3 Baltimore Ravens      152                 70570.                 779.\n 4 Buffalo Bills         152                 67329.                7471.\n 5 Carolina Panthers     152                 73177.                 916.\n 6 Chicago Bears         152                 62261.                2167.\n 7 Cincinnati Bengals    152                 60196.                7078.\n 8 Cleveland Browns      152                 69573.                4000.\n 9 Dallas Cowboys        152                 77249.               13651.\n10 Denver Broncos        152                 76002.                 894.\n# ℹ 24 more rows\n# ℹ 5 more variables: weekly_attendance_min &lt;dbl&gt;, weekly_attendance_q1 &lt;dbl&gt;,\n#   weekly_attendance_median &lt;dbl&gt;, weekly_attendance_q3 &lt;dbl&gt;,\n#   weekly_attendance_max &lt;dbl&gt;\n\nggplot(data = data_train, \n       mapping = aes(\n         x = home_team,\n         y = weekly_attendance\n         )\n       ) +\n  geom_boxplot() + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\nThe table above displays the number of games recorded for each home_team as we want to see how many teams are recorded in our data and the names, as there have been teams in the NFL that have changed names. In addition, we can see that there are 152 games recorded for each team, except the Chargers, Rams, and Texans. However, the Chargers and Rams have 152 when adding their other name, leaving only the Texans with 16 home games missing. This makes sense as the Texans joined in the 2002 season.\nThrough our next table, we can get the total number of values, mean, standard deviation, minimum, median, maximum, and the value at the \\(25\\%\\) and \\(75%\\) of attendance broken into teams in our training data. The table provides exact values, so we can see the extreme values from the following box plot. In the box plot, we can see different teams of varying centers and distributions. In addition, we can see that the Los Angeles Chargers and Arizona Cardinals both have a single extremely large attendance record, which is 84301 and 103467 people, respectively. It can also be seen that the Dallas Cowboys almost always have extremely high attendance compared to other teams. Therefore, due to the differences between teams, home_team is likely a significant predictor for weekly_attendance.\n\ndata_train2 &lt;- data_train\ndata_train2$year &lt;- as.factor(data_train$year)\ndata_train2$week &lt;- as.factor(data_train$week)\nggplot(data = data_train2,\nmapping = aes(\nx = year,\ny = weekly_attendance\n)\n) +\ngeom_boxplot()\n\n\n\n\n\n\n\nggplot(data = data_train,\nmapping = aes(\nx = day,\ny = weekly_attendance\n)\n) +\ngeom_boxplot()\n\n\n\n\n\n\n\nggplot(data = data_train2,\nmapping = aes(\nx = week,\ny = weekly_attendance\n)\n) +\ngeom_boxplot()\n\n\n\n\n\n\n\nggplot(data = data_train,\nmapping = aes(\nx = simple_rating,\ny = weekly_attendance\n)\n) +\ngeom_point()\n\n\n\n\n\n\n\nggplot(data = data_train,\nmapping = aes(\nx = time,\ny = weekly_attendance\n)\n) +\ngeom_point()\n\n\n\n\n\n\n\n\nThe above plots show that attendance doesn’t change significantly based on the simple rating, day, week, or year the game is played; however, it is impacted by time, but since there are different time zones, it doesn’t make much sense to use."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#modeling",
    "href": "Final_Project_Text_And_Code.html#modeling",
    "title": "NFL Attendance",
    "section": "Modeling",
    "text": "Modeling\nI am performing a k-nearest neighbors as assumptions for linear regression has failed the condition of equal variance. K-nearest-neighbors is non-parametric so it has looser conditions and works by using the training set to identify the k points closest to the point we want to predict. Then an average is taken in order to make our prediction.\n\nlm1 &lt;- lm(weekly_attendance ~ home_team + away_team + week + year, data = data_train)\nsummary(lm1)\n\n\nCall:\nlm(formula = weekly_attendance ~ home_team + away_team + week + \n    year, data = data_train)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-37346  -1504    504   2706  47171 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         -129383.93   32213.38  -4.016 6.00e-05 ***\nhome_teamBears        -6831.61     709.36  -9.631  &lt; 2e-16 ***\nhome_teamBengals      -8722.95     714.63 -12.206  &lt; 2e-16 ***\nhome_teamBills        -1815.88     714.15  -2.543 0.011031 *  \nhome_teamBroncos       7113.37     713.17   9.974  &lt; 2e-16 ***\nhome_teamBrowns         647.62     714.51   0.906 0.364781    \nhome_teamBuccaneers   -7159.81     707.19 -10.124  &lt; 2e-16 ***\nhome_teamCardinals   -12601.05     704.10 -17.897  &lt; 2e-16 ***\nhome_teamChargers     -9251.53     712.84 -12.978  &lt; 2e-16 ***\nhome_teamChiefs        5889.38     713.07   8.259  &lt; 2e-16 ***\nhome_teamColts        -7077.63     713.90  -9.914  &lt; 2e-16 ***\nhome_teamCowboys       8484.63     707.90  11.986  &lt; 2e-16 ***\nhome_teamDolphins      -454.53     714.33  -0.636 0.524612    \nhome_teamEagles        -556.37     708.78  -0.785 0.432512    \nhome_teamFalcons       -813.02     707.52  -1.149 0.250567    \nhome_teamGiants        9716.43     708.13  13.721  &lt; 2e-16 ***\nhome_teamJaguars      -5998.42     713.77  -8.404  &lt; 2e-16 ***\nhome_teamJets          8951.72     713.97  12.538  &lt; 2e-16 ***\nhome_teamLions        -6874.56     708.46  -9.703  &lt; 2e-16 ***\nhome_teamPackers       2450.67     708.61   3.458 0.000548 ***\nhome_teamPanthers      4254.78     707.01   6.018 1.90e-09 ***\nhome_teamPatriots     -1559.39     714.18  -2.183 0.029051 *  \nhome_teamRaiders     -13554.55     713.24 -19.004  &lt; 2e-16 ***\nhome_teamRams         -5861.87     704.93  -8.316  &lt; 2e-16 ***\nhome_teamRavens        1719.06     714.82   2.405 0.016215 *  \nhome_teamRedskins     11531.61     708.03  16.287  &lt; 2e-16 ***\nhome_teamSaints         749.63     708.59   1.058 0.290147    \nhome_teamSeahawks     -1941.52     703.81  -2.759 0.005827 ** \nhome_teamSteelers     -6611.24     714.95  -9.247  &lt; 2e-16 ***\nhome_teamTexans        2195.99     734.53   2.990 0.002807 ** \nhome_teamTitans        -729.68     714.16  -1.022 0.306961    \nhome_teamVikings      -6311.00     708.00  -8.914  &lt; 2e-16 ***\naway_teamBears          639.80     709.57   0.902 0.367279    \naway_teamBengals      -1103.98     714.67  -1.545 0.122477    \naway_teamBills         -718.37     714.30  -1.006 0.314611    \naway_teamBroncos        845.37     712.79   1.186 0.235681    \naway_teamBrowns       -1095.87     714.53  -1.534 0.125171    \naway_teamBuccaneers    -438.23     707.20  -0.620 0.535504    \naway_teamCardinals    -1426.36     704.53  -2.025 0.042967 *  \naway_teamChargers      -413.54     713.00  -0.580 0.561935    \naway_teamChiefs        -769.12     712.78  -1.079 0.280622    \naway_teamColts          360.48     713.06   0.506 0.613203    \naway_teamCowboys       1858.33     708.11   2.624 0.008709 ** \naway_teamDolphins       313.49     713.89   0.439 0.660587    \naway_teamEagles         165.44     708.10   0.234 0.815277    \naway_teamFalcons       -287.35     707.35  -0.406 0.684584    \naway_teamGiants          92.66     708.35   0.131 0.895930    \naway_teamJaguars      -1393.94     713.71  -1.953 0.050867 .  \naway_teamJets           264.98     714.76   0.371 0.710857    \naway_teamLions          -14.71     708.22  -0.021 0.983426    \naway_teamPackers       1597.61     708.77   2.254 0.024238 *  \naway_teamPanthers     -1183.20     707.23  -1.673 0.094393 .  \naway_teamPatriots      1696.47     714.49   2.374 0.017617 *  \naway_teamRaiders        316.53     713.02   0.444 0.657115    \naway_teamRams          -558.76     704.94  -0.793 0.428033    \naway_teamRavens        -497.19     714.62  -0.696 0.486622    \naway_teamRedskins      -843.03     707.52  -1.192 0.233507    \naway_teamSaints        -218.67     708.06  -0.309 0.757463    \naway_teamSeahawks      -387.10     703.95  -0.550 0.582412    \naway_teamSteelers      1679.34     714.90   2.349 0.018862 *  \naway_teamTexans       -1167.05     734.27  -1.589 0.112037    \naway_teamTitans        -397.90     714.00  -0.557 0.577355    \naway_teamVikings        312.70     707.69   0.442 0.658604    \nweek                    -60.65      17.56  -3.454 0.000558 ***\nyear                     99.01      16.03   6.177 7.08e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6093 on 4783 degrees of freedom\nMultiple R-squared:  0.5372,    Adjusted R-squared:  0.531 \nF-statistic: 86.75 on 64 and 4783 DF,  p-value: &lt; 2.2e-16\n\nplot(lm1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nknn_recipe &lt;- recipe(\n  weekly_attendance ~ home_team + away_team + week + year,\n  data = data_train\n) |&gt;\n  step_normalize(all_numeric_predictors()) |&gt;\n  step_dummy(all_nominal_predictors(), one_hot = TRUE)\n\nknn_model &lt;- nearest_neighbor(mode = \"regression\", \n                               engine = \"kknn\",\n                               neighbors = tune(), \n                               dist_power = 2)\n\nknn_wflow &lt;- workflow() |&gt;\n  add_model(knn_model)\n\ndata_cv &lt;- vfold_cv(data_train, v = 10)\n\nknn.grid &lt;- expand.grid(neighbors = seq(1,20, by = 1))\n\nknn_wflow &lt;- knn_wflow |&gt;\n  add_recipe(knn_recipe)\n\nknn_tune &lt;- tune_grid(knn_model,\nknn_recipe,\nresamples = data_cv,\ngrid = knn.grid)\n\nautoplot(knn_tune)\n\n\n\n\n\n\n\nknn_best &lt;- knn_tune |&gt;\n  select_best(metric = \"rmse\")\nknn_best\n\n# A tibble: 1 × 2\n  neighbors .config              \n      &lt;dbl&gt; &lt;chr&gt;                \n1        14 Preprocessor1_Model14\n\nmy_best_knn &lt;- knn_wflow |&gt;\n  finalize_workflow(parameters = knn_best)\nmy_best_knn\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: nearest_neighbor()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n2 Recipe Steps\n\n• step_normalize()\n• step_dummy()\n\n── Model ───────────────────────────────────────────────────────────────────────\nK-Nearest Neighbor Model Specification (regression)\n\nMain Arguments:\n  neighbors = 14\n  dist_power = 2\n\nComputational engine: kknn \n\n\nI choose my best model based on the lowest root mean squared error, which we want to minimize as it is calculated as \\(\\sqrt{\\frac{1}{n}\\sum_{i=1}^n(y_i-\\hat{f}(x_i))^2}\\). This is the square root of one over the total number of observations times the sum over the observations of the actual values minus the predicted values squared. Therefore, when the root mean squared error is closer to 0, the actual values are closer to the predicted values."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#insights",
    "href": "Final_Project_Text_And_Code.html#insights",
    "title": "NFL Attendance",
    "section": "Insights",
    "text": "Insights\n\nbest_model_refit &lt;- my_best_knn |&gt;\n  fit_resamples(\n    resamples = data_cv,\n    # save the cross-validated predictions\n    control = control_resamples(save_pred = TRUE)\n)\n\npredictions_best_model &lt;- best_model_refit |&gt;\n  collect_predictions()\n\ncal_plot_regression(\n  predictions_best_model,\n  truth = weekly_attendance,\n  estimate = .pred\n)\n\n\n\n\n\n\n\nbest_model_refit |&gt;\n  cal_validate_linear(\n    save_pred = TRUE,\n    smooth = TRUE) |&gt; # nonlinear smoothing, use smooth = FALSE for linear transformation\n  collect_predictions() |&gt;\n  cal_plot_regression(\n    truth = weekly_attendance,\n    estimate = .pred\n  )\n\n\n\n\n\n\n\ncalibrate_knn &lt;- predictions_best_model |&gt;\n  # instructions for post-processing\n  cal_estimate_linear(\n    truth = weekly_attendance,\n    smooth = TRUE # nonlinear smoothing\n  )\n\nknn_fit &lt;- my_best_knn |&gt; fit(\n  data = data_train\n)\n\nknn_test_pred2 &lt;- knn_fit |&gt;\n  augment(new_data = data_test) |&gt;\n  # apply the post-processing\n  cal_apply(calibrate_knn)\n\n\nclean &lt;- knn_test_pred2 %&gt;%\n  select(.pred, year, week, home_team, away_team, weekly_attendance)\nclean$difference &lt;- (clean$.pred-clean$weekly_attendance)\nclean %&gt;%\n  sort_by(clean$difference)\n\n# A tibble: 256 × 7\n    .pred  year  week home_team away_team weekly_attendance difference\n    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;                 &lt;dbl&gt;      &lt;dbl&gt;\n 1 62074.  2019     9 Jaguars   Texans                84771    -22697.\n 2 66843.  2019     8 Rams      Bengals               83720    -16877.\n 3 59573.  2019    11 Chargers  Chiefs                76252    -16679.\n 4 59817.  2019     6 Rams      49ers                 75695    -15878.\n 5 77358.  2019    10 Cowboys   Vikings               91188    -13830.\n 6 77406.  2019    15 Cowboys   Rams                  90436    -13030.\n 7 77633.  2019     3 Cowboys   Dolphins              90127    -12494.\n 8 79623.  2019    13 Cowboys   Bills                 90445    -10822.\n 9 61450.  2019    14 Rams      Seahawks              71501    -10051.\n10 83113.  2019     5 Cowboys   Packers               93024     -9911.\n# ℹ 246 more rows\n\n\nOur test set of 2019 data shows that our model isn’t that great at predicting attendance, except for attendance between 60,000 and 80,000. In fact, it seems to be based on luck. Therefore, since our model isn’t great at predicting the 2019 data we can’t and won’t move onto 2020 data until we get better results.\n\nLimitations and Future Work\nThe model is poorly predicting games with attendance that don’t fall between 60,000 and 80,000 attendants. This is likely due to a majority of values being there for use in k-nearest neighbors, while further values have less similar options. The data collection and analysis would be significantly improved if stadium data were readily available in a precleaned way. In addition, rivalries between teams could be another indicator of attendance. Since I am using a non-parametric approach, the assumptions are satisfied. There are some ethical concerns, such as if there is a great prediction, then teams might hire fewer workers during low attendance games, and ticket prices might be raised on high attendance games.\n\n\nReflection\nThis project has made me appreciate the difficulty of working with online data and how many of the methods we learned in class have to examined and thought about before being applied to projects."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#motivation-and-context",
    "href": "Final_Project_Text_And_Code.html#motivation-and-context",
    "title": "NFL Attendance",
    "section": "",
    "text": "This section describes what you are investigating in your project and why you are investigating it. You should provide enough contextual background and information that someone with a limited background can understand the broad outlines of the topic being investigated.\nI am investigating attendance at NFL games because it is interesting to delve into the many factors that play into why a person would go to a stadium rather than simply watch from home. The time of day, date, loyalty to a team, cost, and rivalries may all play a role. There are also other monetary reasons one should consider investigating future attendance. For instance, given a predicted increase, which isn’t possible due to stadium limitations, renovating stadiums for additional seats may become a priority. In addition, there are dynamic reasons, such as ticket prices and the number of staff, which can change depending on predicted attendance.\nThe background to understand NFL game attendance is the locations of stadiums and the popularity of teams. While how the game is played is interesting, it isn’t vital to the analysis as long as we know that higher scores are better. There is, however, a simple rating system where 0 is an average team, with above zero being better and below being worse, used to measure the quality of the teams’ offense, defense, and opponents. There is also a bye week for each team where they don’t play, and the data uses the outdated sixteen-game season with eight played at home and the other eight played away. Lastly, changes in team names and locations are important to consider."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#data-wrangling",
    "href": "Final_Project_Text_And_Code.html#data-wrangling",
    "title": "NFL Attendance",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\nAttendance_2020 &lt;- Attendance_2020 %&gt;%\n  mutate(across(starts_with(\"week_\"), as.numeric)) %&gt;%\n  pivot_longer(\n    cols = starts_with(\"week_\"),\n    names_prefix = \"week_\",\n    names_to = \"week\",\n    values_to = \"weekly_attendance\"\n  )\n\nWarning: There were 9 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `across(starts_with(\"week_\"), as.numeric)`.\nCaused by warning:\n! NAs introduced by coercion\nℹ Run `dplyr::last_dplyr_warnings()` to see the 8 remaining warnings.\n\nAttendance_2020$year &lt;- 2020\nAttendance_2020$home_team &lt;- Attendance_2020$tm\nAttendance_2020$week &lt;- as.double(Attendance_2020$week)\nattendance$newteam &lt;- str_c(attendance$team, attendance$team_name, sep = \" \", collapse = NULL)\nstandings$newteam &lt;- str_c(standings$team, standings$team_name, sep = \" \", collapse = NULL)\ngames$week &lt;- as.numeric(games$week)\n\nWarning: NAs introduced by coercion\n\ngames &lt;- games %&gt;%\n  drop_na(week)\ndata &lt;- games %&gt;%\n  left_join(attendance, by = c(\"home_team\" = \"newteam\", \"year\", \"week\"))\ndata &lt;- data %&gt;%\n  left_join(standings, by = c(\"home_team\" = \"newteam\", \"year\", \"team\", \"team_name\"))\nstadiums &lt;- stadiums %&gt;%\n  separate_rows(primary_team_s, sep = \",\")\nstadiums &lt;- stadiums %&gt;%\n  drop_na(primary_team_s)\nstadiums &lt;- stadiums %&gt;%\n  rowwise() %&gt;%\n  mutate(year = list(from:to)) %&gt;%\n  unnest(year) %&gt;%\n  select(-from, -to)\nstadiums &lt;- stadiums %&gt;%\n  filter(year &gt;= 2000)\nstadiums &lt;- stadiums %&gt;%\n  filter(year &lt;= 2020)\nstadiums &lt;- stadiums %&gt;%\n  distinct(year, primary_team_s, .keep_all = TRUE)\ndata &lt;- data %&gt;%\n  left_join(stadiums, by = c(\"home_team\" = \"primary_team_s\", \"year\"))\n\n\ndata_train &lt;- data %&gt;%\n  filter(year != 2019)\ndata_test &lt;- data %&gt;%\n  filter(year == 2019)"
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#more-data-wrangling",
    "href": "Final_Project_Text_And_Code.html#more-data-wrangling",
    "title": "NFL Attendance",
    "section": "More Data Wrangling",
    "text": "More Data Wrangling\n\ndata_train &lt;- data_train %&gt;%\n  mutate(last_word = str_extract(home_team, \"\\\\w+$\")) %&gt;%\n  mutate(home_team = ifelse(duplicated(last_word) | duplicated(last_word, fromLast = TRUE),\n                            last_word, \n                            home_team)) %&gt;%\n  select(-last_word)\ndata_train &lt;- data_train %&gt;%\n  mutate(last_word = str_extract(away_team, \"\\\\w+$\")) %&gt;%\n  mutate(away_team = ifelse(duplicated(last_word) | duplicated(last_word, fromLast = TRUE),\n                            last_word, \n                            away_team)) %&gt;%\n  select(-last_word)\ndata_test &lt;- data_test %&gt;%\n  mutate(last_word = str_extract(home_team, \"\\\\w+$\")) %&gt;%\n  mutate(home_team = ifelse(duplicated(last_word) | duplicated(last_word, fromLast = TRUE),\n                            last_word, \n                            home_team)) %&gt;%\n  select(-last_word)\ndata_test &lt;- data_test %&gt;%\n  mutate(last_word = str_extract(away_team, \"\\\\w+$\")) %&gt;%\n  mutate(away_team = ifelse(duplicated(last_word) | duplicated(last_word, fromLast = TRUE),\n                            last_word, \n                            away_team)) %&gt;%\n  select(-last_word)\nAttendance_2020 &lt;- Attendance_2020 %&gt;%\n  mutate(last_word = str_extract(home_team, \"\\\\w+$\")) %&gt;%\n  mutate(home_team = ifelse(duplicated(last_word) | duplicated(last_word, fromLast = TRUE),\n                            last_word, \n                            home_team)) %&gt;%\n  select(-last_word)"
  }
]