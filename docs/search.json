[
  {
    "objectID": "Final_Project_Text_And_Code.html",
    "href": "Final_Project_Text_And_Code.html",
    "title": "NFL Attendance",
    "section": "",
    "text": "This section describes what you are investigating in your project and why you are investigating it. You should provide enough contextual background and information that someone with a limited background can understand the broad outlines of the topic being investigated.\nI am investigating attendance at NFL games because it is interesting to delve into the many factors that play into why a person would go to a stadium rather than simply watch from home. The time of day, date, loyalty to a team, cost, and rivalries may all play a role. There are also other monetary reasons one should consider investigating future attendance. For instance, given a predicted increase, which isn’t possible due to stadium limitations, renovating stadiums for additional seats may become a priority. In addition, there are dynamic reasons, such as ticket prices and the number of staff, which can change depending on predicted attendance.\nThe background to understand NFL game attendance is the locations of stadiums and the popularity of teams. While how the game is played is interesting, it isn’t vital to the analysis as long as we know that higher scores are better. There is, however, a simple rating system where 0 is an average team, with above zero being better and below being worse, used to measure the quality of the teams’ offense, defense, and opponents. There is also a bye week for each team where they don’t play, and the data uses the outdated sixteen-game season with eight played at home and the other eight played away. Lastly, changes in team names and locations are important to consider."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#motivation-and-context",
    "href": "Final_Project_Text_And_Code.html#motivation-and-context",
    "title": "NFL Attendance",
    "section": "",
    "text": "This section describes what you are investigating in your project and why you are investigating it. You should provide enough contextual background and information that someone with a limited background can understand the broad outlines of the topic being investigated.\nI am investigating attendance at NFL games because it is interesting to delve into the many factors that play into why a person would go to a stadium rather than simply watch from home. The time of day, date, loyalty to a team, cost, and rivalries may all play a role. There are also other monetary reasons one should consider investigating future attendance. For instance, given a predicted increase, which isn’t possible due to stadium limitations, renovating stadiums for additional seats may become a priority. In addition, there are dynamic reasons, such as ticket prices and the number of staff, which can change depending on predicted attendance.\nThe background to understand NFL game attendance is the locations of stadiums and the popularity of teams. While how the game is played is interesting, it isn’t vital to the analysis as long as we know that higher scores are better. There is, however, a simple rating system where 0 is an average team, with above zero being better and below being worse, used to measure the quality of the teams’ offense, defense, and opponents. There is also a bye week for each team where they don’t play, and the data uses the outdated sixteen-game season with eight played at home and the other eight played away. Lastly, changes in team names and locations are important to consider."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#main-objective",
    "href": "Final_Project_Text_And_Code.html#main-objective",
    "title": "NFL Attendance",
    "section": "Main Objective",
    "text": "Main Objective\nThe main objective of this project is to predict what the attendance per game would have been in the 2020 season if there wasn’t a COVID-19 restriction."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#packages-used-in-this-analysis",
    "href": "Final_Project_Text_And_Code.html#packages-used-in-this-analysis",
    "title": "NFL Attendance",
    "section": "Packages Used In This Analysis",
    "text": "Packages Used In This Analysis\n\nlibrary(readr)\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(naniar)\nlibrary(workflows)\nlibrary(workflowsets)\nlibrary(tune)\nlibrary(recipes)\nlibrary(kknn)\nlibrary(rsample)\nlibrary(parsnip)\nlibrary(tidyr)\nlibrary(tidymodels)\nlibrary(probably)\nlibrary(vip)\nlibrary(xgboost)\n\n\n\n\n\n\n\n\nPackage\nUse\n\n\n\n\n[readr]\nread in csv\n\n\n[stringr]\nSeparate strings into new rows by commas\n\n\n[dplyr]\nIn order to join data\n\n\n[ggplot2]\nTo plot data\n\n\n[naniar]\nTo plot and use missing data\n\n\n[workflows]\nTo make tidy models\n\n\n[workflowsets]\nAlso to make tidy models\n\n\n[tune]\nTo cross validate\n\n\n[recipes]\nTo build recipes for tidy model\n\n\n[kknn]\nTo build knn models\n\n\n[rsample]\nFor building cross validation data\n\n\n[parsnip]\nFor building knn too\n\n\n[tidyr]\nTo drop na values and adjust data\n\n\n[tidymodels]\nTo make grids and other modeling\n\n\n[probably]\nTo calibrate knn model\n\n\n[vip]\nFor variable importance plot\n\n\n[xgboost]\nFor boosted trees\n\n\n\n…"
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#data-description",
    "href": "Final_Project_Text_And_Code.html#data-description",
    "title": "NFL Attendance",
    "section": "Data Description",
    "text": "Data Description\nI am using data on attendance, scores, and other metrics for football teams’ games from 2000 to 2019. It is from a Tidy Tuesday from 02/04/2020, which is a community that posts weekly projects. The data is collected from Pro Football Reference, which I am also using, and it was most likely collected through nfl.com as there is a gamebook that states the attendance as the data matches it. It also states the stadiums that would be useful to scrape, and the dates and times are also most likely collected from them. The game book states that paid attendance is probably collected based on how many tickets are used to enter the stadium. I have looked at and downloaded some stadiums and data for 2020; however, the data wrangling required exceeds the time remaining to complete the project.\nTidy Tuesday https://github.com/rfordatascience/tidytuesday/tree/main/data/2020/2020-02-04\nPro Football Reference https://www.pro-football-reference.com/\nNFL Website https://www.nfl.com/\n\nattendance &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-02-04/attendance.csv')\nstandings &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-02-04/standings.csv')\ngames &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-02-04/games.csv')\n\n\nData Limitations\nThere are many limitations, such as there not being recorded stadiums, stadium capacity, and the size of the city. There may also be bias in the way that attendance is recorded to make the league seem to have a better performance or for headlines. The methodology that follows also may not be applicable to other sports as the number of games may be vital to whether people attend a game, whether due to fatigue from too many games or better opportunities; however, due to similarities, college football may be applicable. In addition, preseason and playoff data aren’t included; however, the methodology that follows may be applicable to them."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#data-wrangling",
    "href": "Final_Project_Text_And_Code.html#data-wrangling",
    "title": "NFL Attendance",
    "section": "Data Wrangling",
    "text": "Data Wrangling\nI am combining my datasets into one for prediction and making weeks into a categorical variable since they aren’t increasing linearly and it accounts for how one week may be higher than another week due to holidays or etc.\n\nattendance$newteam &lt;- str_c(attendance$team, attendance$team_name, sep = \" \", collapse = NULL)\nstandings$newteam &lt;- str_c(standings$team, standings$team_name, sep = \" \", collapse = NULL)\ngames$week &lt;- as.numeric(games$week)\n\nWarning: NAs introduced by coercion\n\ngames &lt;- games %&gt;%\n  drop_na(week)\ndata &lt;- games %&gt;%\n  left_join(attendance, by = c(\"home_team\" = \"newteam\", \"year\", \"week\"))\ndata &lt;- data %&gt;%\n  left_join(standings, by = c(\"home_team\" = \"newteam\", \"year\", \"team\", \"team_name\"))\n\nI am filtering the data to only include the last 5 years since the NFL changes at a fast pace. In addition, I tested including more data and it made the predictions worse.\n\ndata_train &lt;- data %&gt;%\n  filter(year != 2019 & year &gt; 2013)\ndata_test &lt;- data %&gt;%\n  filter(year == 2019)\ndata_train$week &lt;- as.factor(data_train$week)\ndata_test$week &lt;- as.factor(data_test$week)"
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#exploratory-data-analysis",
    "href": "Final_Project_Text_And_Code.html#exploratory-data-analysis",
    "title": "NFL Attendance",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\nattendance %&gt;%\n  miss_var_summary()\n\n# A tibble: 9 × 3\n  variable          n_miss pct_miss\n  &lt;chr&gt;              &lt;int&gt;    &lt;num&gt;\n1 weekly_attendance    638     5.88\n2 team                   0     0   \n3 team_name              0     0   \n4 year                   0     0   \n5 total                  0     0   \n6 home                   0     0   \n7 away                   0     0   \n8 week                   0     0   \n9 newteam                0     0   \n\ncount(attendance)/638\n\n   n\n1 17\n\n\nThis corresponds one-to-one to the fact that each team is given one week of the seventeen-week season as a bye week.\n\ndata_train %&gt;%\nsummarize(\nnumber = n(),\nweekly_attendance_mean = mean(weekly_attendance, na.rm = TRUE),\nweekly_attendance_sd = sd(weekly_attendance, na.rm = TRUE),\nweekly_attendance_min = min(weekly_attendance, na.rm = TRUE),\nweekly_attendance_q1 = quantile(weekly_attendance, 0.25, na.rm = TRUE),\nweekly_attendance_median = median(weekly_attendance, na.rm = TRUE),\nweekly_attendance_q3 = quantile(weekly_attendance, 0.75, na.rm = TRUE),\nweekly_attendance_max = max(weekly_attendance, na.rm = TRUE)\n)\n\n# A tibble: 1 × 8\n  number weekly_attendance_mean weekly_attendance_sd weekly_attendance_min\n   &lt;int&gt;                  &lt;dbl&gt;                &lt;dbl&gt;                 &lt;dbl&gt;\n1   1280                 68231.                9508.                 25015\n# ℹ 4 more variables: weekly_attendance_q1 &lt;dbl&gt;,\n#   weekly_attendance_median &lt;dbl&gt;, weekly_attendance_q3 &lt;dbl&gt;,\n#   weekly_attendance_max &lt;dbl&gt;\n\nggplot(data = data_train,\n       mapping = aes(x = weekly_attendance)\n) +\n  geom_histogram(center = 57500,\n                 binwidth = 5000)\n\n\n\n\n\n\n\nggplot(data = data_train,\nmapping = aes(y = weekly_attendance)\n) +\ngeom_boxplot()\n\n\n\n\n\n\n\n\nThrough the table, we can get the total number of values, mean, standard deviation, minimum, median, maximum, and the value at the \\(25\\%\\) and \\(75%\\) of attendance in training data. Through the exact values, we notice that attendance is centered between 63,000 and 73,000 people. In addition, all the values are plausible, as there are no recorded negative or exceedingly high values. The histogram shows no large breaks between different recorded attendances, but as the values get more extreme, there are fewer recorded games with such attendance. The boxplot shows a large number of outliers.\n\ndata_train %&gt;%\n group_by(home_team) %&gt;%\n  count()\n\n# A tibble: 34 × 2\n# Groups:   home_team [34]\n   home_team              n\n   &lt;chr&gt;              &lt;int&gt;\n 1 Arizona Cardinals     40\n 2 Atlanta Falcons       40\n 3 Baltimore Ravens      40\n 4 Buffalo Bills         40\n 5 Carolina Panthers     40\n 6 Chicago Bears         40\n 7 Cincinnati Bengals    40\n 8 Cleveland Browns      40\n 9 Dallas Cowboys        40\n10 Denver Broncos        40\n# ℹ 24 more rows\n\ndata_train %&gt;%\n  group_by(home_team) %&gt;%\n  summarize(\n    number = n(),\n    weekly_attendance_mean = mean(weekly_attendance, na.rm = TRUE),\n    weekly_attendance_sd = sd(weekly_attendance, na.rm = TRUE),\n    weekly_attendance_min = min(weekly_attendance, na.rm = TRUE),\n    weekly_attendance_q1 = quantile(weekly_attendance, 0.25, na.rm = TRUE),\n    weekly_attendance_median = median(weekly_attendance, na.rm = TRUE),\n    weekly_attendance_q3 = quantile(weekly_attendance, 0.75, na.rm = TRUE),\n    weekly_attendance_max = max(weekly_attendance, na.rm = TRUE)\n  )\n\n# A tibble: 34 × 9\n   home_team          number weekly_attendance_mean weekly_attendance_sd\n   &lt;chr&gt;               &lt;int&gt;                  &lt;dbl&gt;                &lt;dbl&gt;\n 1 Arizona Cardinals      40                 63446.                1348.\n 2 Atlanta Falcons        40                 71469.                2394.\n 3 Baltimore Ravens       40                 70834.                 360.\n 4 Buffalo Bills          40                 67530.                3860.\n 5 Carolina Panthers      40                 73770.                 628.\n 6 Chicago Bears          40                 61289.                1134.\n 7 Cincinnati Bengals     40                 57920.                7400.\n 8 Cleveland Browns       40                 65514.                3799.\n 9 Dallas Cowboys         40                 91682.                1650.\n10 Denver Broncos         40                 76688.                 377.\n# ℹ 24 more rows\n# ℹ 5 more variables: weekly_attendance_min &lt;dbl&gt;, weekly_attendance_q1 &lt;dbl&gt;,\n#   weekly_attendance_median &lt;dbl&gt;, weekly_attendance_q3 &lt;dbl&gt;,\n#   weekly_attendance_max &lt;dbl&gt;\n\nggplot(data = data_train, \n       mapping = aes(\n         x = home_team,\n         y = weekly_attendance\n         )\n       ) +\n  geom_boxplot() + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\nggplot(data = data_train, \n       mapping = aes(\n         x = away_team,\n         y = weekly_attendance\n         )\n       ) +\n  geom_boxplot() + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\nThe table above displays the number of games recorded for each home_team as we want to see how many teams are recorded in our data and the names, as there have been teams in the NFL that have changed names. In addition, we can see that there are 40 games recorded for each team, except the Chargers, Rams, and Texans. However, the Chargers and Rams have theirs split into different teams in 2017 and 2016, respectively.\nThrough our next table, we can get the total number of values, mean, standard deviation, minimum, median, maximum, and the value at the \\(25\\%\\) and \\(75%\\) of attendance broken into teams in our training data. The table provides exact values, so we can see the extreme values from the following box plot. In the box plot, we can see different teams of varying centers and distributions. In addition, we can see that the Los Angeles Chargers has a single extremely large attendance record, which is 84301 people. It can also be seen that the Dallas Cowboys almost always have extremely high attendance compared to other teams. Therefore, due to the differences between teams, home_team is likely a significant predictor for weekly_attendance. The same can be said for away team as well but it is significantly less severe.\n\nggplot(data = data_train,\nmapping = aes(\nx = year,\ny = weekly_attendance\n)\n) +\ngeom_point()\n\n\n\n\n\n\n\nggplot(data = data_train,\nmapping = aes(\nx = day,\ny = weekly_attendance\n)\n) +\ngeom_boxplot()\n\n\n\n\n\n\n\nggplot(data = data_train,\nmapping = aes(\nx = week,\ny = weekly_attendance\n)\n) +\ngeom_boxplot()\n\n\n\n\n\n\n\nggplot(data = data_train,\nmapping = aes(\nx = simple_rating,\ny = weekly_attendance\n)\n) +\ngeom_point()\n\n\n\n\n\n\n\nggplot(data = data_train,\nmapping = aes(\nx = time,\ny = weekly_attendance\n)\n) +\ngeom_point()\n\n\n\n\n\n\n\n\nThe above plots show that attendance doesn’t change significantly based on the simple rating, day, week, or year the game is played; however, it is impacted by time, but since there are different time zones, it doesn’t make much sense to use."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#more-data-wrangling",
    "href": "Final_Project_Text_And_Code.html#more-data-wrangling",
    "title": "NFL Attendance",
    "section": "More Data Wrangling",
    "text": "More Data Wrangling\n\ndata_train &lt;- data_train %&gt;%\n  mutate(last_word = str_extract(home_team, \"\\\\w+$\")) %&gt;%\n  mutate(home_team = ifelse(duplicated(last_word) | duplicated(last_word, fromLast = TRUE),\n                            last_word, \n                            home_team)) %&gt;%\n  select(-last_word)\ndata_train &lt;- data_train %&gt;%\n  mutate(last_word = str_extract(away_team, \"\\\\w+$\")) %&gt;%\n  mutate(away_team = ifelse(duplicated(last_word) | duplicated(last_word, fromLast = TRUE),\n                            last_word, \n                            away_team)) %&gt;%\n  select(-last_word)\ndata_test &lt;- data_test %&gt;%\n  mutate(last_word = str_extract(home_team, \"\\\\w+$\")) %&gt;%\n  mutate(home_team = ifelse(duplicated(last_word) | duplicated(last_word, fromLast = TRUE),\n                            last_word, \n                            home_team)) %&gt;%\n  select(-last_word)\ndata_test &lt;- data_test %&gt;%\n  mutate(last_word = str_extract(away_team, \"\\\\w+$\")) %&gt;%\n  mutate(away_team = ifelse(duplicated(last_word) | duplicated(last_word, fromLast = TRUE),\n                            last_word, \n                            away_team)) %&gt;%\n  select(-last_word)\nAttendance_2020 &lt;- Attendance_2020 %&gt;%\n  mutate(last_word = str_extract(home_team, \"\\\\w+$\")) %&gt;%\n  mutate(home_team = ifelse(duplicated(last_word) | duplicated(last_word, fromLast = TRUE),\n                            last_word, \n                            home_team)) %&gt;%\n  select(-last_word)"
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#modeling",
    "href": "Final_Project_Text_And_Code.html#modeling",
    "title": "NFL Attendance",
    "section": "Modeling",
    "text": "Modeling\nI am performing a k-nearest neighbors as assumptions for linear regression has failed the condition of equal variance. K-nearest-neighbors is non-parametric so it has looser conditions and works by using the training set to identify the k points closest to the point we want to predict. Then an average is taken in order to make our prediction.\nI am using the home_team and away_team in my prediction as they can catch information not in variables in my dataset such stadium and team strength. I am also using week and year as I feel they can be used to show the changes in time, but year is numerical as it isn’t in the testing set otherwise.\n\nlm1 &lt;- lm(weekly_attendance ~ home_team + away_team + week + year, data = data_train)\nsummary(lm1)\n\n\nCall:\nlm(formula = weekly_attendance ~ home_team + away_team + week + \n    year, data = data_train)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-15050  -1436     31   1330  54855 \n\nCoefficients:\n                               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                   705281.18  173916.65   4.055 5.33e-05 ***\nhome_teamAtlanta Falcons        8152.51     955.15   8.535  &lt; 2e-16 ***\nhome_teamBaltimore Ravens       7592.87     959.55   7.913 5.69e-15 ***\nhome_teamBuffalo Bills          4241.76     958.92   4.423 1.06e-05 ***\nhome_teamCarolina Panthers     10400.43     954.29  10.899  &lt; 2e-16 ***\nhome_teamChicago Bears         -2232.02     945.79  -2.360 0.018437 *  \nhome_teamCincinnati Bengals    -5297.93     961.92  -5.508 4.45e-08 ***\nhome_teamCleveland Browns       2133.03     960.21   2.221 0.026509 *  \nhome_teamDallas Cowboys        28324.36     949.87  29.819  &lt; 2e-16 ***\nhome_teamDenver Broncos        13513.67     960.23  14.073  &lt; 2e-16 ***\nhome_teamDetroit Lions         -1019.16     952.83  -1.070 0.285011    \nhome_teamGreen Bay Packers     14713.16     949.29  15.499  &lt; 2e-16 ***\nhome_teamHouston Texans         8770.89     958.80   9.148  &lt; 2e-16 ***\nhome_teamIndianapolis Colts      712.47     958.91   0.743 0.457631    \nhome_teamJacksonville Jaguars   2429.78     958.03   2.536 0.011332 *  \nhome_teamKansas City Chiefs    11432.43     954.09  11.983  &lt; 2e-16 ***\nhome_teamLos Angeles Chargers -33675.64    1259.44 -26.739  &lt; 2e-16 ***\nhome_teamLos Angeles Rams       9842.93    1095.07   8.988  &lt; 2e-16 ***\nhome_teamMiami Dolphins         3774.36     958.43   3.938 8.69e-05 ***\nhome_teamMinnesota Vikings     -2423.09     951.66  -2.546 0.011016 *  \nhome_teamNew England Patriots   3541.34     959.15   3.692 0.000232 ***\nhome_teamNew Orleans Saints     9945.95     952.92  10.437  &lt; 2e-16 ***\nhome_teamNew York Giants       14644.32     951.33  15.394  &lt; 2e-16 ***\nhome_teamNew York Jets         14567.60     958.32  15.201  &lt; 2e-16 ***\nhome_teamOakland Raiders       -6070.22     958.26  -6.335 3.36e-10 ***\nhome_teamPhiladelphia Eagles    6201.30     951.66   6.516 1.06e-10 ***\nhome_teamPittsburgh Steelers      89.47     963.67   0.093 0.926042    \nhome_teamSan Diego Chargers     -633.91    1103.12  -0.575 0.565634    \nhome_teamSan Francisco 49ers    6704.47     944.45   7.099 2.15e-12 ***\nhome_teamSeattle Seahawks       5604.60     947.34   5.916 4.30e-09 ***\nhome_teamSt. Louis Rams        -9523.83    1250.95  -7.613 5.40e-14 ***\nhome_teamTampa Bay Buccaneers  -4069.88     952.96  -4.271 2.10e-05 ***\nhome_teamTennessee Titans       2330.32     959.38   2.429 0.015288 *  \nhome_teamWashington Redskins   10079.34     952.02  10.587  &lt; 2e-16 ***\naway_teamAtlanta Falcons        -481.46     955.17  -0.504 0.614316    \naway_teamBaltimore Ravens         19.45     959.53   0.020 0.983830    \naway_teamBuffalo Bills           459.50     958.47   0.479 0.631736    \naway_teamCarolina Panthers      -408.98     952.70  -0.429 0.667789    \naway_teamChicago Bears           654.15     948.50   0.690 0.490538    \naway_teamCincinnati Bengals       24.37     960.37   0.025 0.979764    \naway_teamCleveland Browns       -666.85     958.72  -0.696 0.486838    \naway_teamDallas Cowboys         2189.36     947.87   2.310 0.021070 *  \naway_teamDenver Broncos          421.96     959.78   0.440 0.660272    \naway_teamDetroit Lions           136.98     954.96   0.143 0.885969    \naway_teamGreen Bay Packers       470.78     947.21   0.497 0.619265    \naway_teamHouston Texans        -1061.95     958.66  -1.108 0.268196    \naway_teamIndianapolis Colts     -601.80     960.70  -0.626 0.531156    \naway_teamJacksonville Jaguars  -1068.49     960.15  -1.113 0.266003    \naway_teamKansas City Chiefs     -694.88     955.52  -0.727 0.467226    \naway_teamLos Angeles Chargers   -228.47    1258.00  -0.182 0.855914    \naway_teamLos Angeles Rams       -694.25    1096.35  -0.633 0.526698    \naway_teamMiami Dolphins          378.06     958.75   0.394 0.693415    \naway_teamMinnesota Vikings       465.99     950.13   0.490 0.623905    \naway_teamNew England Patriots   1813.93     957.72   1.894 0.058465 .  \naway_teamNew Orleans Saints      460.40     954.55   0.482 0.629668    \naway_teamNew York Giants         557.26     950.99   0.586 0.558001    \naway_teamNew York Jets          -284.01     957.95  -0.296 0.766921    \naway_teamOakland Raiders        -161.43     960.23  -0.168 0.866518    \naway_teamPhiladelphia Eagles     617.00     951.66   0.648 0.516893    \naway_teamPittsburgh Steelers    1606.96     962.32   1.670 0.095204 .  \naway_teamSan Diego Chargers    -1586.09    1104.44  -1.436 0.151235    \naway_teamSan Francisco 49ers     208.08     942.17   0.221 0.825243    \naway_teamSeattle Seahawks       1603.90     945.64   1.696 0.090127 .  \naway_teamSt. Louis Rams         -558.97    1253.68  -0.446 0.655778    \naway_teamTampa Bay Buccaneers   -546.87     952.74  -0.574 0.566079    \naway_teamTennessee Titans       -193.89     959.37  -0.202 0.839875    \naway_teamWashington Redskins    -490.36     951.50  -0.515 0.606401    \nweek2                           -701.37     672.85  -1.042 0.297442    \nweek3                           -101.89     669.28  -0.152 0.879022    \nweek4                           1003.69     679.05   1.478 0.139647    \nweek5                            193.57     686.93   0.282 0.778152    \nweek6                           -268.27     683.42  -0.393 0.694725    \nweek7                            623.64     682.77   0.913 0.361215    \nweek8                           1064.13     696.86   1.527 0.127017    \nweek9                            204.50     709.97   0.288 0.773362    \nweek10                          -109.30     696.50  -0.157 0.875327    \nweek11                           560.72     695.37   0.806 0.420198    \nweek12                         -1025.05     669.28  -1.532 0.125894    \nweek13                         -1063.78     670.99  -1.585 0.113142    \nweek14                         -1049.42     667.86  -1.571 0.116373    \nweek15                            91.93     669.91   0.137 0.890873    \nweek16                          -741.63     665.52  -1.114 0.265342    \nweek17                          -306.73     668.59  -0.459 0.646478    \nyear                            -318.43      86.27  -3.691 0.000233 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4156 on 1196 degrees of freedom\nMultiple R-squared:  0.8213,    Adjusted R-squared:  0.8089 \nF-statistic: 66.22 on 83 and 1196 DF,  p-value: &lt; 2.2e-16\n\nplot(lm1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nknn_recipe &lt;- recipe(\n  weekly_attendance ~ home_team + away_team + week + year,\n  data = data_train\n) |&gt;\n  step_normalize(all_numeric_predictors()) |&gt;\n  step_dummy(all_nominal_predictors(), one_hot = TRUE)\n\nknn_model &lt;- nearest_neighbor(mode = \"regression\", \n                               engine = \"kknn\",\n                               neighbors = tune(), \n                               dist_power = 2)\n\nknn_wflow &lt;- workflow() |&gt;\n  add_model(knn_model)\n\ndata_cv &lt;- vfold_cv(data_train, v = 10)\n\nknn.grid &lt;- expand.grid(neighbors = seq(1,20, by = 1))\n\nknn_wflow &lt;- knn_wflow |&gt;\n  add_recipe(knn_recipe)\n\nknn_tune &lt;- tune_grid(knn_model,\nknn_recipe,\nresamples = data_cv,\ngrid = knn.grid)\n\nautoplot(knn_tune)\n\n\n\n\n\n\n\nknn_best &lt;- knn_tune |&gt;\n  select_best(metric = \"rmse\")\nknn_best\n\n# A tibble: 1 × 2\n  neighbors .config              \n      &lt;dbl&gt; &lt;chr&gt;                \n1        20 Preprocessor1_Model20\n\nmy_best_knn &lt;- knn_wflow |&gt;\n  finalize_workflow(parameters = knn_best)\nmy_best_knn\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: nearest_neighbor()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n2 Recipe Steps\n\n• step_normalize()\n• step_dummy()\n\n── Model ───────────────────────────────────────────────────────────────────────\nK-Nearest Neighbor Model Specification (regression)\n\nMain Arguments:\n  neighbors = 20\n  dist_power = 2\n\nComputational engine: kknn \n\n\nI choose my best model based on the lowest root mean squared error, which we want to minimize as it is calculated as \\(\\sqrt{\\frac{1}{n}\\sum_{i=1}^n(y_i-\\hat{f}(x_i))^2}\\). This is the square root of one over the total number of observations times the sum over the observations of the actual values minus the predicted values squared. Therefore, when the root mean squared error is closer to 0, the actual values are closer to the predicted values.\n\nxgboostR_model &lt;- boost_tree(mode = \"regression\", engine = \"xgboost\",\n                            trees = tune(), tree_depth = tune(),\n                            learn_rate = tune())\n\nxgboostR_recipe &lt;- recipe(\n  weekly_attendance ~ home_team + away_team + week + year,, # response ~ predictors\n  data = data_train\n) |&gt;\n  step_dummy(all_nominal_predictors())\n\nxgboostR_wflow &lt;- workflow() |&gt;\n  add_model(xgboostR_model) |&gt;\n  add_recipe(xgboostR_recipe)\n\nset.seed(1486)\nxgboostR_tune &lt;- tune_grid(xgboostR_model, \n                      xgboostR_recipe, \n                      resamples = data_cv,\n                      metrics = metric_set(rmse),\n                      grid = grid_space_filling(\n                        trees(), \n                        tree_depth(), \n                        learn_rate(), \n                        size = 3)) # search over 20 possible combinations of the three parameters - keep this small if you don't want it running forever\n\nxgboostR_tune |&gt;\n  collect_metrics() |&gt;\n  filter(.metric == \"rmse\") |&gt;\n  arrange(mean)\n\n# A tibble: 3 × 9\n  trees tree_depth   learn_rate .metric .estimator   mean     n std_err .config \n  &lt;int&gt;      &lt;int&gt;        &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;   \n1  2000         15 0.1          rmse    standard    3710.    10    387. Preproc…\n2     1          8 0.00000316   rmse    standard   68883.    10    311. Preproc…\n3  1000          1 0.0000000001 rmse    standard   68883.    10    311. Preproc…\n\nxgboostR_best &lt;- select_by_one_std_err(xgboostR_tune, \n                             metric = \"rmse\", \n                             tree_depth, trees, desc(learn_rate))\nxgboostR_wflow_final &lt;- finalize_workflow(xgboostR_wflow, \n                                          parameters = xgboostR_best) \n\nxgboostR_fit &lt;- fit(xgboostR_wflow_final, data = data_train)\nxgboostR_predict &lt;- augment(xgboostR_fit, new_data = data_test)\nxgboostR_predict |&gt; \n  dplyr::slice(1:10) # must use dplyr::slice because there is also a slice function in xgboost\n\n# A tibble: 10 × 38\n    .pred  year week  home_team away_team winner tie   day   date  time  pts_win\n    &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;tim&gt;   &lt;dbl&gt;\n 1 62248.  2019 1     Chicago … Green Ba… Green… &lt;NA&gt;  Thu   Sept… 20:20      10\n 2 63192.  2019 1     Clevelan… Tennesse… Tenne… &lt;NA&gt;  Sun   Sept… 13:00      43\n 3 66308.  2019 1     Minnesot… Atlanta … Minne… &lt;NA&gt;  Sun   Sept… 13:00      28\n 4 68999.  2019 1     Philadel… Washingt… Phila… &lt;NA&gt;  Sun   Sept… 13:00      32\n 5 73872.  2019 1     Carolina… Los Ange… Los A… &lt;NA&gt;  Sun   Sept… 13:00      30\n 6 78022.  2019 1     New York… Buffalo … Buffa… &lt;NA&gt;  Sun   Sept… 13:00      17\n 7 66992.  2019 1     Jacksonv… Kansas C… Kansa… &lt;NA&gt;  Sun   Sept… 13:00      40\n 8 65954.  2019 1     Miami Do… Baltimor… Balti… &lt;NA&gt;  Sun   Sept… 13:00      59\n 9 25750.  2019 1     Los Ange… Indianap… Los A… &lt;NA&gt;  Sun   Sept… 16:05      30\n10 69457.  2019 1     Seattle … Cincinna… Seatt… &lt;NA&gt;  Sun   Sept… 16:05      21\n# ℹ 27 more variables: pts_loss &lt;dbl&gt;, yds_win &lt;dbl&gt;, turnovers_win &lt;dbl&gt;,\n#   yds_loss &lt;dbl&gt;, turnovers_loss &lt;dbl&gt;, home_team_name &lt;chr&gt;,\n#   home_team_city &lt;chr&gt;, away_team_name &lt;chr&gt;, away_team_city &lt;chr&gt;,\n#   team &lt;chr&gt;, team_name &lt;chr&gt;, total &lt;dbl&gt;, home &lt;dbl&gt;, away &lt;dbl&gt;,\n#   weekly_attendance &lt;dbl&gt;, wins &lt;dbl&gt;, loss &lt;dbl&gt;, points_for &lt;dbl&gt;,\n#   points_against &lt;dbl&gt;, points_differential &lt;dbl&gt;, margin_of_victory &lt;dbl&gt;,\n#   strength_of_schedule &lt;dbl&gt;, simple_rating &lt;dbl&gt;, offensive_ranking &lt;dbl&gt;, …\n\nrmse(xgboostR_predict, truth = weekly_attendance, estimate = .pred)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 rmse    standard       5256.\n\n\nI am running a boosted tree here which works by trees being grown sequentially from previous trees formed thorugh a modified version of the dataset. They work by splitting trees into sections based on predictors until enough splits are made in order for the predictions to be accurate but splits are controlled so it doesn’t split until groups are one.\nI am cross validating the same way as for knn but with the highest rmse within one standard deviation of the lowest."
  },
  {
    "objectID": "Final_Project_Text_And_Code.html#insights",
    "href": "Final_Project_Text_And_Code.html#insights",
    "title": "NFL Attendance",
    "section": "Insights",
    "text": "Insights\n\nbest_model_refit &lt;- my_best_knn |&gt;\n  fit_resamples(\n    resamples = data_cv,\n    # save the cross-validated predictions\n    control = control_resamples(save_pred = TRUE)\n)\n\npredictions_best_model &lt;- best_model_refit |&gt;\n  collect_predictions()\n\ncal_plot_regression(\n  predictions_best_model,\n  truth = weekly_attendance,\n  estimate = .pred\n)\n\n\n\n\n\n\n\nbest_model_refit |&gt;\n  cal_validate_linear(\n    save_pred = TRUE,\n    smooth = TRUE) |&gt; # nonlinear smoothing, use smooth = FALSE for linear transformation\n  collect_predictions() |&gt;\n  cal_plot_regression(\n    truth = weekly_attendance,\n    estimate = .pred\n  )\n\n\n\n\n\n\n\ncalibrate_knn &lt;- predictions_best_model |&gt;\n  # instructions for post-processing\n  cal_estimate_linear(\n    truth = weekly_attendance,\n    smooth = TRUE # nonlinear smoothing\n  )\n\nknn_fit &lt;- my_best_knn |&gt; fit(\n  data = data_train\n)\n\nknn_test_pred2 &lt;- knn_fit |&gt;\n  augment(new_data = data_test) |&gt;\n  # apply the post-processing\n  cal_apply(calibrate_knn)\n\n\nclean &lt;- knn_test_pred2\nclean$difference &lt;- (clean$.pred-clean$weekly_attendance)\nclean %&gt;%\n  sort_by(clean$difference)\n\n# A tibble: 256 × 40\n    .pred .resid  year week  home_team  away_team winner tie   day   date  time \n    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;tim&gt;\n 1 35665. 48165.  2019 11    Los Angel… Kansas C… Kansa… &lt;NA&gt;  Mon   Nove… 20:15\n 2 63945. 19670.  2019 9     Jacksonvi… Houston … Houst… &lt;NA&gt;  Sun   Nove… 09:30\n 3 76182. 15686.  2019 15    Dallas Co… Los Ange… Dalla… &lt;NA&gt;  Sun   Dece… 16:25\n 4 70636. 13740.  2019 8     Los Angel… Cincinna… Los A… &lt;NA&gt;  Sun   Octo… 13:00\n 5 79722. 13769.  2019 10    Dallas Co… Minnesot… Minne… &lt;NA&gt;  Sun   Nove… 20:20\n 6 63776.  7054.  2019 1     Carolina … Los Ange… Los A… &lt;NA&gt;  Sun   Sept… 13:00\n 7 68849.  7491.  2019 5     Washingto… New Engl… New E… &lt;NA&gt;  Sun   Octo… 13:00\n 8 60169.  5288.  2019 12    Buffalo B… Denver B… Buffa… &lt;NA&gt;  Sun   Nove… 13:00\n 9 64781.  5970.  2019 7     Atlanta F… Los Ange… Los A… &lt;NA&gt;  Sun   Octo… 13:00\n10 62823.  4978.  2019 14    Buffalo B… Baltimor… Balti… &lt;NA&gt;  Sun   Dece… 13:00\n# ℹ 246 more rows\n# ℹ 29 more variables: pts_win &lt;dbl&gt;, pts_loss &lt;dbl&gt;, yds_win &lt;dbl&gt;,\n#   turnovers_win &lt;dbl&gt;, yds_loss &lt;dbl&gt;, turnovers_loss &lt;dbl&gt;,\n#   home_team_name &lt;chr&gt;, home_team_city &lt;chr&gt;, away_team_name &lt;chr&gt;,\n#   away_team_city &lt;chr&gt;, team &lt;chr&gt;, team_name &lt;chr&gt;, total &lt;dbl&gt;, home &lt;dbl&gt;,\n#   away &lt;dbl&gt;, weekly_attendance &lt;dbl&gt;, wins &lt;dbl&gt;, loss &lt;dbl&gt;,\n#   points_for &lt;dbl&gt;, points_against &lt;dbl&gt;, points_differential &lt;dbl&gt;, …\n\n\nOur test set of 2019 data shows that our model isn’t that great at predicting attendance, except for attendance between about 65,000 and 75,000. In addition, predictions get further from our observed when further from the middle value at about 70,000.\n\nxgboostR_fit |&gt; extract_fit_engine() |&gt;\n      vip(scale = TRUE)\n\n\n\n\n\n\n\nplot(xgboostR_predict$.pred, xgboostR_predict$weekly_attendance) +\n  abline(0,1)\n\n\n\n\n\n\n\n\ninteger(0)\n\n\nI also ran an importance plot on a boosted tree model. The highest importance is the LA Chargers most likely because there aren’t that many games recorded for them and they are getting significantly less attendance than the rest of the NFL. It is followed by the Dallas Cowboys probably because they have a higher attendance than the mean. The years show that it is the next most used in splitting the data.\nThe plot also shows that our predictions are closer to our actual values than the knn model.\n\nLimitations and Future Work\nThe knn model is poorly predicting games with attendance that don’t fall between 60,000 and 80,000 attendants. This is likely due to a majority of values being there for use in k-nearest neighbors, while further values have less similar options. The data collection and analysis would be significantly improved if stadium data were readily available in a precleaned way. The boosted trees also performs better but it may be due to overfitting and shows the importance of stadiums as the teams were used significantly. In addition, rivalries between teams could be another indicator of attendance. Since I am using a non-parametric approach, the assumptions are satisfied. There are some ethical concerns, such as if there is a great prediction, then teams might hire fewer workers during low attendance games, and ticket prices might be raised on high attendance games.\n\n\nReflection\nThis project has made me appreciate the difficulty of working with online data and how many of the methods we learned in class have to examined and thought about before being applied to projects.\nHow did doing this project increase your understanding of statistical learning and/or the real-world domain you investigated? (It’s perfectly okay to say you learned nothing, in which case you should explain why.) This project made me understand the complexity of working with datasets collected by other people and how much bad data there is to work with. In the presentations, I listened to a common theme, synthetic data from Kaggle, and the main insight was a lack of connection. The project also granted me a better understanding of game attendance and how much data would be nice to have in order to predict future attendance. There was also domain-specific knowledge I got a better understanding of, such as the fact that there is a bye week for each NFL team in the regular season. In addition, I understand how many limitations a project can have, with stadium data being a recurring theme of what I would need in order to make a deeper analysis. The project also provided me with the method to build and adjust a website. I plan to continue using the technique of building a website for my resume and further academic projects. How have you grown as a mathematician, statistician, and/or data scientist through taking Math 437 this semester? How do you hope to continue growing in the near future as a mathematician, statistician, and/or data scientist, and how (if at all) has Math 437 influenced those ideas? I have grown significantly through taking this class. I have learned more about statistical methods for modeling regression and classification. I hope to continue growing in the near future by pursuing a PhD at Florida State University. In addition, I plan to continue doing research on this subject. Math 437 has influenced my approach to statistics by making me learn to apply more methods and the importance of learning the methodology and requirements in order to use certain methods. What were you most proud of accomplishing in this class, and why? (This can be a “little win” like “solving Problem X on Homework Y on my own” or “getting Lab Z to render correctly on the first try.”) My proudest accomplishment in this class is my grade on the conceptual exam because I put multiple hours into creating an all-encompassing study guide in order to make it as simple as possible. I went through the book and example code to relearn the material in preparation, and I felt that my grade on it was a reflection of my effort in the class. I would like to hope that my overall grade in the class will end up being my greatest accomplishment."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Yoav Noiman",
    "section": "",
    "text": "A little bit about me and my life."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Yoav Noiman",
    "section": "Education",
    "text": "Education\nUniversity of California State University, Fullerton | Location | Fall 2021 - Spring 2025"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Yoav Noiman",
    "section": "Experience",
    "text": "Experience\nWorkplace | Job title | April 20XX - present"
  }
]